{
	"PipelineNotificatinPolicy": {
		"Type": "AWS::IAM::Policy",
		"Properties": {
			"PolicyName": "default",
			"Roles": [
				{ "Ref": "PipelineLambdaNotificationRole" }
			],
			"PolicyDocument": {
				"Version": "2012-10-17",
				"Statement": [
					{
						"Action": [
							"iam:PassRole"
						],
						"Resource": "*",
						"Effect": "Allow",
						"Condition": {
							"StringEqualsIfExists": {
								"iam:PassedToService": [
									"cloudformation.amazonaws.com",
									"elasticbeanstalk.amazonaws.com",
									"ec2.amazonaws.com",
									"ecs-tasks.amazonaws.com"
								]
							}
						}
					},
					{
						"Action": [
							"codecommit:CancelUploadArchive",
							"codecommit:GetBranch",
							"codecommit:GetCommit",
							"codecommit:GetUploadArchiveStatus",
							"codecommit:UploadArchive"
						],
						"Resource": "*",
						"Effect": "Allow"
					},
					{
						"Action": [
							"codedeploy:CreateNotificationment",
							"codedeploy:GetApplication",
							"codedeploy:GetApplicationRevision",
							"codedeploy:GetNotificationment",
							"codedeploy:GetNotificationmentConfig",
							"codedeploy:RegisterApplicationRevision"
						],
						"Resource": "*",
						"Effect": "Allow"
					},
					{
						"Action": [
							"elasticbeanstalk:*",
							"ec2:*",
							"elasticloadbalancing:*",
							"autoscaling:*",
							"cloudwatch:*",
							"s3:*",
							"sns:*",
							"cloudformation:*",
							"rds:*",
							"sqs:*",
							"ecs:*"
						],
						"Resource": "*",
						"Effect": "Allow"
					},
					{
						"Action": [
							"lambda:InvokeFunction",
							"lambda:ListFunctions"
						],
						"Resource": "*",
						"Effect": "Allow"
					},
					{
						"Action": [
							"opsworks:CreateNotificationment",
							"opsworks:DescribeApps",
							"opsworks:DescribeCommands",
							"opsworks:DescribeNotificationments",
							"opsworks:DescribeInstances",
							"opsworks:DescribeStacks",
							"opsworks:UpdateApp",
							"opsworks:UpdateStack"
						],
						"Resource": "*",
						"Effect": "Allow"
					},
					{
						"Action": [
							"cloudformation:CreateStack",
							"cloudformation:DeleteStack",
							"cloudformation:DescribeStacks",
							"cloudformation:UpdateStack",
							"cloudformation:CreateChangeSet",
							"cloudformation:DeleteChangeSet",
							"cloudformation:DescribeChangeSet",
							"cloudformation:ExecuteChangeSet",
							"cloudformation:SetStackPolicy",
							"cloudformation:ValidateTemplate"
						],
						"Resource": "*",
						"Effect": "Allow"
					},
					{
						"Action": [
							"codebuild:BatchGetBuilds",
							"codebuild:StartBuild"
						],
						"Resource": "*",
						"Effect": "Allow"
					},
					{
						"Effect": "Allow",
						"Action": [
							"devicefarm:ListProjects",
							"devicefarm:ListDevicePools",
							"devicefarm:GetRun",
							"devicefarm:GetUpload",
							"devicefarm:CreateUpload",
							"devicefarm:ScheduleRun"
						],
						"Resource": "*"
					},
					{
						"Effect": "Allow",
						"Action": [
							"servicecatalog:ListProvisioningArtifacts",
							"servicecatalog:CreateProvisioningArtifact",
							"servicecatalog:DescribeProvisioningArtifact",
							"servicecatalog:DeleteProvisioningArtifact",
							"servicecatalog:UpdateProduct"
						],
						"Resource": "*"
					},
					{
						"Effect": "Allow",
						"Action": [
							"cloudformation:ValidateTemplate"
						],
						"Resource": "*"
					},
					{
						"Effect": "Allow",
						"Action": [
							"ecr:DescribeImages"
						],
						"Resource": "*"
					}
				]
			}
		}
	}
}
